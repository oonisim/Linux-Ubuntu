#--------------------------------------------------------------------------------
# [Author]  Masayuki Onishi
# [History] Ver 1.0 10JUL2016 initial for Ubuntu 14.04
#--------------------------------------------------------------------------------
# [Function]
# site specific puppet configurations
#--------------------------------------------------------------------------------

$ntp_server  = 'ntp.demo.local'
notify { "hostname is ${::hostname}" : }

if $::kernel == 'windows' {
    Package { provider => chocolatey }
    exec { 'install-chocolatey':
        command => "iex ((new-object net.webclient).DownloadString('https://chocolatey.org/install.ps1'))",
        logoutput => 'true',
        provider => powershell,
    }
    include chocolatey
}


#-------------------------------------------------------------------------------
# Nodes
#-------------------------------------------------------------------------------
node 'admin' {
    #--------------------------------------------------------------------------------
    # Git repository
    #--------------------------------------------------------------------------------
    package { 'git':
        ensure  => 'present',
    }

    #--------------------------------------------------------------------------------
    # /etc/hosts
    #--------------------------------------------------------------------------------
    include site_hosts::hosts

    #--------------------------------------------------------------------------------
    # /etc/resolv.conf
    #--------------------------------------------------------------------------------
    #include site_resolver
    
    #--------------------------------------------------------------------------------
    # Apache HTTPD
    #--------------------------------------------------------------------------------
    class {'apache':}

    #--------------------------------------------------------------------------------
    # NTP Server
    #--------------------------------------------------------------------------------
    include site_ntp::server

    #--------------------------------------------------------------------------------
    # Install Cassandra on the node.
    #--------------------------------------------------------------------------------
    #include site_cassandra::cassandra
    #class { 'site_cassandra::cassandra': }

    #--------------------------------------------------------------------------------
    # Elasticsearch
    #--------------------------------------------------------------------------------
    #include site_elasticsearch::elasticsearch
    #class { 'site_elasticsearch::elasticsearch':}
}

node 'repository' {
    #--------------------------------------------------------------------------------
    # /etc/hosts
    #--------------------------------------------------------------------------------
    include site_hosts::hosts

    #--------------------------------------------------------------------------------
    # /etc/resolv.conf
    #--------------------------------------------------------------------------------
    include site_resolver

    #--------------------------------------------------------------------------------
    # Apache HTTPD
    #--------------------------------------------------------------------------------
    class {'apache':}

    #--------------------------------------------------------------------------------
    # NTP client
    #--------------------------------------------------------------------------------
    class {'site_ntp::client':
        ntp_server => $ntp_server,
    }
}

node 'masatest' {
    #--------------------------------------------------------------------------------
    # Git repository
    #--------------------------------------------------------------------------------
    package { 'git':
        ensure  => 'present',
    }
#    include site_admin::git

    #--------------------------------------------------------------------------------
    # Apache HTTPD
    #--------------------------------------------------------------------------------
    #class {'apache':}
    include site_apache::server

    #--------------------------------------------------------------------------------
    # DNS Server
    #--------------------------------------------------------------------------------
    include site_dns::server

    #--------------------------------------------------------------------------------
    # NTP Server
    #--------------------------------------------------------------------------------
    include site_ntp::server

    #--------------------------------------------------------------------------------
    # Puppet Server
    # Just to ensure server is running as installation on master server is done manually.
    #--------------------------------------------------------------------------------
    package { 'puppetserver':
        ensure  => 'present',
    }
    service { 'puppetserver':
        ensure => 'running',
        require => Package['puppetserver'],
    }
}

node default {
    notify { 'Node default match':}

    #--------------------------------------------------------------------------------
    # /etc/hosts
    #--------------------------------------------------------------------------------
    include site_hosts::hosts

    #--------------------------------------------------------------------------------
    # Sudoer
    # Looks not working as expected when used at the linux installation time
    #--------------------------------------------------------------------------------

    #--------------------------------------------------------------------------------
    # /etc/resolv.conf
    #--------------------------------------------------------------------------------
    include site_resolver

    #--------------------------------------------------------------------------------
    # NTP client
    #--------------------------------------------------------------------------------
    class {'site_ntp::client':
        ntp_server => $ntp_server,
    }

    #--------------------------------------------------------------------------------
    # Ruby
    #--------------------------------------------------------------------------------
    package { 'ruby':
      ensure => present,
    }
    package { 'puppet-lint':
      ensure   => 'latest',
      provider => 'puppet_gem',
      require  => Package['ruby'],
    }

    #--------------------------------------------------------------------------------
    # Stop unnecessary services
    #--------------------------------------------------------------------------------
#    service { 'avahi-daemon' :
#         ensure => 'stopped',
#         enable => 'false'
#    }
}

node /^actasyddc0[1-9]$/ {
    #--------------------------------------------------------------------------------
    # Windows Domain
    #--------------------------------------------------------------------------------
    $windowsDomain="demo.local"
    class {'site_windows::dc':
        domainName => $windowsDomain,
        domainHost => $::hostname 
    }

    #--------------------------------------------------------------------------------
    # IIS
    #--------------------------------------------------------------------------------
    class {'site_windows::iis': }

    #--------------------------------------------------------------------------------
    # RDS
    #--------------------------------------------------------------------------------
    class {'site_windows::rds': }

    #--------------------------------------------------------------------------------
    # Misc
    #--------------------------------------------------------------------------------
    class {'site_windows::common': }
}

node /^actasyd((ui)|(san))[0-9]+$/ {
    notify { 'Windows node default match':}

    #--------------------------------------------------------------------------------
    # IIS
    #--------------------------------------------------------------------------------
    class {'site_windows::iis': }

    #--------------------------------------------------------------------------------
    # RDS
    #--------------------------------------------------------------------------------
    class {'site_windows::rds': }

    #--------------------------------------------------------------------------------
    # Failover
    #--------------------------------------------------------------------------------
    class {'site_windows::failover': }

    #--------------------------------------------------------------------------------
    # Misc
    #--------------------------------------------------------------------------------
    class {'site_windows::common': }

    #--------------------------------------------------------------------------------
    # ACTA UI Prerequisite. AppFabric (hosting) is missing.
    #--------------------------------------------------------------------------------
    package { ['vcredist2010', 'vcredist2012', 'vcredist2013', 'dotnet4.5.1', 'silverlight', 'webdeploy', 'winrar' ]:
        ensure   => installed,
    }
}
